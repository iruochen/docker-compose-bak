services:
  zookeeper-1:
    image: zookeeper:3.8.4
    restart: always
    hostname: zk1
    container_name: zk1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
    volumes:
      - zk1-data:/data
      - zk1-datalog:/datalog
    networks:
      - kafka-net     
    ports:
      - "2181:2181"

  zookeeper-2:
    image: zookeeper:3.8.4
    hostname: zk2
    container_name: zk2
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zk3:2888:3888;2181
    volumes:
      - zk2-data:/data
      - zk2-datalog:/datalog
    networks:
      - kafka-net     
    ports:
      - "2182:2181"

  zookeeper-3:
    image: zookeeper:3.8.4
    hostname: zk3
    container_name: zk3
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
    volumes:
      - zk3-data:/data
      - zk3-datalog:/datalog
    networks:
      - kafka-net     
    ports:
      - "2183:2181"

  kafka-1:
    image: bitnami/kafka:3.8.1
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_EXTERNAL://192.168.10.162:19092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_EXTERNAL://0.0.0.0:19092
      # 定义监听器映射
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      # 指定 Kafka 集群内部通信的监听器
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - "19092:19092"
    networks:
      - kafka-net
    volumes:
      - kafka-1-data:/bitnami/kafka

  kafka-2:
    image: bitnami/kafka:3.8.1
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093,PLAINTEXT_EXTERNAL://192.168.10.162:19093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,PLAINTEXT_EXTERNAL://0.0.0.0:19093
      # 定义监听器映射
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      # 指定 Kafka 集群内部通信的监听器
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - "19093:19093"
    networks:
      - kafka-net
    volumes:
      - kafka-2-data:/bitnami/kafka

  kafka-3:
    image: bitnami/kafka:3.8.1
    container_name: kafka-3
    hostname: kafka-3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094,PLAINTEXT_EXTERNAL://192.168.10.162:19094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,PLAINTEXT_EXTERNAL://0.0.0.0:19094
      # 定义监听器映射
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      # 指定 Kafka 集群内部通信的监听器
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - "19094:19094"
    networks:
      - kafka-net
    volumes:
      - kafka-3-data:/bitnami/kafka

volumes:
  zk1-data:
  zk1-datalog:
  zk2-data:
  zk2-datalog:
  zk3-data:
  zk3-datalog:
  kafka-1-data:
  kafka-2-data:
  kafka-3-data:

networks:
  kafka-net:
